<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Your page description here">
    <title>EJS Tags</title>
    <style>
        /* Dark mode support */
        @media (prefers-color-scheme: dark) {
            body {
                background: linear-gradient(135deg, #1a1a1a 0%, #2c3e50 100%);
                color: #f5f5f5;
            }
            li {
                background: linear-gradient(to right, #2c3e50, #34495e);
                border-left-color: #3498db;
            }
            h1 {
                color: #f5f5f5;
                border-bottom-color: #3498db;
            }
        }

        /* Existing styles with improvements */
        body {
            font-family: 'Arial', sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.6;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            transition: background-color 0.3s ease;
        }

        h1 {
            color: #2c3e50;
            text-align: center;
            border-bottom: 2px solid #3498db;
            padding-bottom: 10px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
            animation: fadeIn 0.5s ease-in;
        }

        ul {
            list-style-type: none;
            padding: 0;
            display: grid;
            gap: 15px;
        }

        li {
            background: linear-gradient(to right, #ffffff, #f0f0f0);
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            border-left: 4px solid #3498db;
            animation: slideIn 0.3s ease-out forwards;
            opacity: 1;
            animation-delay: calc(var(--item-index) * 0.1s);
            color: #2c3e50;
        }

        .seconds {
            font-size: 1.3em;
            color: #2980b9;
            font-weight: bold;
            background: -webkit-linear-gradient(45deg, #2980b9, #3498db);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            transition: opacity 0.3s ease;
        }

        .no-items {
            text-align: center;
            color: #7f8c8d;
            font-style: italic;
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            border: 1px dashed #bdc3c7;
            animation: fadeIn 0.5s ease-in;
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideIn {
            from {
                opacity: 1;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        /* Loading state */
        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        /* Accessibility improvements */
        :focus {
            outline: 3px solid #3498db;
            outline-offset: 2px;
        }

        @media (max-width: 768px) {
            body {
                padding: 10px;
            }
            li {
                margin: 10px 0;
            }
        }

        p {
            color: #2c3e50;
            margin: 1rem 0;
            padding: 10px;
            border-radius: 6px;
            background-color: rgba(255, 255, 255, 0.7);
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        /* Dark mode support for paragraphs */
        @media (prefers-color-scheme: dark) {
            p {
                color: #f5f5f5;
                background-color: rgba(44, 62, 80, 0.7);
            }
            li {
                background: linear-gradient(to right, #2c3e50, #34495e);
                color: #f5f5f5;
            }
        }

        /* Improved footer styling */
        footer {
            text-align: center;
            margin-top: 20px;
            padding: 10px;
            background-color: transparent;
            border-radius: 0;
            box-shadow: none;
        }

        /* Hover effect for the main heading */
        h1:hover {
            color: inherit;
            text-shadow: none;
            cursor: default;
        }

        /* Consistent padding and margins */
        body {
            padding: 20px;
        }

        p {
            margin: 1rem 0;
        }
    </style>
</head>

<body>
    <main role="main">
        <h1 tabindex="0">
            <%= title %>
        </h1>
        <p>Current second: <span class="seconds" aria-live="polite"><%= seconds %></span></p>
        
        <ul>
            <% if (seconds % 2===0) { %>
                <% items.forEach((item, index) => { %>
                    <li style="--item-index: <%= index %>"><%= item %></li>
                <% }) %>
            <% } else { %>
                <% oddItems.forEach((item, index) => { %>
                    <li style="--item-index: <%= index %>"><%= item %></li>
                <% }) %>
            <% } %>
        </ul>

        <em>This is some em text</em>
        
        <footer>
            <%- include("footer.ejs") %>
        </footer>
    </main>
    <script>
        function updateContent() {
            fetch(window.location.href)
                .then(response => response.text())
                .then(html => {
                    const parser = new DOMParser();
                    const newDoc = parser.parseFromString(html, 'text/html');
                    
                    // Update the seconds
                    const newSeconds = newDoc.querySelector('.seconds').textContent;
                    document.querySelector('.seconds').textContent = newSeconds;
                    
                    // Update the list items
                    const newList = newDoc.querySelector('ul').innerHTML;
                    document.querySelector('ul').innerHTML = newList;
                });
        }

        // Update content every second
        setInterval(updateContent, 1000);
    </script>
</body>
</html>